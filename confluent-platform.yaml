---
apiVersion: platform.confluent.io/v1beta1
kind: Zookeeper
metadata:
  name: zookeeper
  namespace: confluent
spec:
  replicas: 1
  image:
    application: confluentinc/cp-zookeeper:7.4.0
    init: confluentinc/confluent-init-container:2.6.0
  podTemplate:
    resources:
      limits:
        memory: "256Mi"
      requests:
        memory: "128Mi"
  dataVolumeCapacity: 10Gi
  logVolumeCapacity: 10Gi
---
apiVersion: platform.confluent.io/v1beta1
kind: Kafka
metadata:
  name: kafka
  namespace: confluent
spec:
  replicas: 1
  image:
    application: confluentinc/cp-server:7.4.0
    init: confluentinc/confluent-init-container:2.6.0
  podTemplate:
    resources:
      limits:
        memory: "1024Mi"
      requests:
        memory: "512Mi"
    probe:
      readiness:
        initialDelaySeconds: 300
        periodSeconds: 10
      liveness:
        initialDelaySeconds: 500
        periodSeconds: 10
  configOverrides:
    server:
      - "confluent.license.topic.replication.factor=1"
      - "confluent.metrics.reporter.topic.replicas=1"
      - "confluent.tier.metadata.replication.factor=1"
      - "confluent.metadata.topic.replication.factor=1"
      - "confluent.balancer.topic.replication.factor=1"
      - "confluent.security.event.logger.exporter.kafka.topic.replicas=1"
      - "event.logger.exporter.kafka.topic.replicas=1"
      - "offsets.topic.replication.factor=1"
  dataVolumeCapacity: 100Gi
  metricReporter:
    enabled: true
  dependencies:
    zookeeper:
      endpoint: zookeeper.confluent.svc.cluster.local:2181
---
apiVersion: platform.confluent.io/v1beta1
kind: Connect
metadata:
  name: connect
  namespace: confluent
spec:
  replicas: 1
  image:
    application: $CONNECTOR_IMAGE
    init: confluentinc/confluent-init-container:2.6.0
  podTemplate:
    resources:
      limits:
        memory: "1024Mi"
      requests:
        memory: "512Mi"
    probe:
      readiness:
        initialDelaySeconds: 300
        periodSeconds: 10
      liveness:
        initialDelaySeconds: 500
        periodSeconds: 10
  configOverrides:
    server:
      - config.storage.replication.factor=1
      - offset.storage.replication.factor=1
      - status.storage.replication.factor=1
  dependencies:
    kafka:
      bootstrapEndpoint: kafka:9071
---
apiVersion: platform.confluent.io/v1beta1
kind: KsqlDB
metadata:
  name: ksqldb
  namespace: confluent
spec:
  replicas: 1
  image:
    application: confluentinc/cp-ksqldb-server:7.4.0
    init: confluentinc/confluent-init-container:2.6.0
  podTemplate:
    resources:
      limits:
        memory: "512Mi"
      requests:
        memory: "256Mi"
    probe:
      readiness:
        initialDelaySeconds: 300
        periodSeconds: 10
      liveness:
        initialDelaySeconds: 500
        periodSeconds: 10
  dataVolumeCapacity: 10Gi
---
apiVersion: platform.confluent.io/v1beta1
kind: ControlCenter
metadata:
  name: controlcenter
  namespace: confluent
spec:
  replicas: 1
  image:
    application: confluentinc/cp-enterprise-control-center:7.4.0
    init: confluentinc/confluent-init-container:2.6.0
  podTemplate:
    resources:
      limits:
        memory: "1024Mi"
      requests:
        memory: "512Mi"
    probe:
      readiness:
        initialDelaySeconds: 300
        periodSeconds: 10
      liveness:
        initialDelaySeconds: 500
        periodSeconds: 10
  configOverrides:
    server:
      - confluent.controlcenter.internal.topics.replication=1
      - confluent.controlcenter.command.topic.replication=1
      - confluent.monitoring.interceptor.topic.replication=1
      - confluent.metrics.topic.replication=1
  dataVolumeCapacity: 10Gi
  dependencies:
    schemaRegistry:
      url: http://schemaregistry.confluent.svc.cluster.local:8081
    ksqldb:
    - name: ksqldb
      url: http://ksqldb.confluent.svc.cluster.local:8088
    connect:
    - name: connect
      url: http://connect.confluent.svc.cluster.local:8083
---
apiVersion: platform.confluent.io/v1beta1
kind: SchemaRegistry
metadata:
  name: schemaregistry
  namespace: confluent
spec:
  replicas: 1
  image:
    application: confluentinc/cp-schema-registry:7.4.0
    init: confluentinc/confluent-init-container:2.6.0
  podTemplate:
    resources:
      limits:
        memory: "256Mi"
      requests:
        memory: "128Mi"
---
apiVersion: platform.confluent.io/v1beta1
kind: KafkaRestProxy
metadata:
  name: kafkarestproxy
  namespace: confluent
spec:
  replicas: 1
  image:
    application: confluentinc/cp-kafka-rest:7.4.0
    init: confluentinc/confluent-init-container:2.6.0
  podTemplate:
    resources:
      limits:
        memory: "256Mi"
      requests:
        memory: "128Mi"
  dependencies:
    schemaRegistry:
      url: http://schemaregistry.confluent.svc.cluster.local:8081
